Description: Update to Jetty 8
Origin: backport, https://svn.apache.org/r1298108 
--- a/solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.java
+++ b/solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.java
@@ -22,19 +22,20 @@
 import java.net.URL;
 import java.util.Random;
 
+import javax.servlet.DispatcherType;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 
 import org.apache.solr.servlet.SolrDispatchFilter;
-import org.mortbay.jetty.Handler;
-import org.mortbay.jetty.Server;
-import org.mortbay.jetty.Connector;
-import org.mortbay.jetty.bio.SocketConnector;
-import org.mortbay.jetty.servlet.Context;
-import org.mortbay.jetty.servlet.FilterHolder;
-import org.mortbay.jetty.servlet.HashSessionIdManager;
-import org.mortbay.log.Logger;
+import org.eclipse.jetty.server.Handler;
+import org.eclipse.jetty.server.Server;
+import org.eclipse.jetty.server.Connector;
+import org.eclipse.jetty.server.bio.SocketConnector;
+import org.eclipse.jetty.servlet.ServletContextHandler;
+import org.eclipse.jetty.servlet.FilterHolder;
+import org.eclipse.jetty.server.session.HashSessionIdManager;
+import org.eclipse.jetty.util.log.Logger;
 
 /**
  * Run solr using jetty
@@ -90,11 +91,11 @@
     server.setStopAtShutdown( true );
     
     // Initialize the servlets
-    Context root = new Context( server, context, Context.SESSIONS );
+    ServletContextHandler root = new ServletContextHandler(server,context,ServletContextHandler.SESSIONS);
     
     // for some reason, there must be a servlet for this to get applied
     root.addServlet( Servlet404.class, "/*" );
-    dispatchFilter = root.addFilter( SolrDispatchFilter.class, "*", Handler.REQUEST );
+    dispatchFilter = root.addFilter(SolrDispatchFilter.class, "*", java.util.EnumSet.of(DispatcherType.REQUEST) );
   }
 
   //------------------------------------------------------------------------------------------------
@@ -220,11 +221,48 @@
     debug=enabled;
   }
   
-  public void info(String msg,Object arg0, Object arg1) {}
   public void debug(String msg,Throwable th){}
-  public void debug(String msg,Object arg0, Object arg1){}
-  public void warn(String msg,Object arg0, Object arg1){}
-  public void warn(String msg, Throwable th){}
+
+  @Override
+  public void debug(Throwable arg0) {
+  }
+
+  @Override
+  public void debug(String arg0, Object... arg1) {
+  }
+
+  @Override
+  public String getName() {
+    return toString();
+  }
+
+  @Override
+  public void ignore(Throwable arg0) {
+  }
+
+  @Override
+  public void info(Throwable arg0) {
+  }
+
+  @Override
+  public void info(String arg0, Object... arg1) {
+  }
+
+  @Override
+  public void info(String arg0, Throwable arg1) {
+  }
+
+  @Override
+  public void warn(Throwable arg0) {
+  }
+
+  @Override
+  public void warn(String arg0, Object... arg1) {
+  }
+
+  @Override
+  public void warn(String arg0, Throwable arg1) {
+  }
 
   public Logger getLogger(String name)
   {
--- a/solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty.java
+++ b/solr/solrj/src/test/org/apache/solr/client/solrj/StartSolrJetty.java
@@ -17,10 +17,10 @@
 
 package org.apache.solr.client.solrj;
 
-import org.mortbay.jetty.Connector;
-import org.mortbay.jetty.Server;
-import org.mortbay.jetty.bio.SocketConnector;
-import org.mortbay.jetty.webapp.WebAppContext;
+import org.eclipse.jetty.server.Connector;
+import org.eclipse.jetty.server.Server;
+import org.eclipse.jetty.server.bio.SocketConnector;
+import org.eclipse.jetty.webapp.WebAppContext;
 
 /**
  * @since solr 1.3
@@ -52,7 +52,7 @@
 //      mBeanContainer.start();
 //    }
     
-    server.addHandler(bb);
+    server.setHandler(bb);
 
     try {
       System.out.println(">>> STARTING EMBEDDED JETTY SERVER, PRESS ANY KEY TO STOP");
--- a/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest.java
+++ b/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/JettyWebappTest.java
@@ -29,11 +29,11 @@
 import org.junit.Rule;
 import org.junit.rules.RuleChain;
 import org.junit.rules.TestRule;
-import org.mortbay.jetty.Connector;
-import org.mortbay.jetty.Server;
-import org.mortbay.jetty.bio.SocketConnector;
-import org.mortbay.jetty.servlet.HashSessionIdManager;
-import org.mortbay.jetty.webapp.WebAppContext;
+import org.eclipse.jetty.server.Connector;
+import org.eclipse.jetty.server.Server;
+import org.eclipse.jetty.server.bio.SocketConnector;
+import org.eclipse.jetty.server.session.HashSessionIdManager;
+import org.eclipse.jetty.webapp.WebAppContext;
 
 /**
  * @version $Id$
